{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varsa\\\\Quiz-Website-Project\\\\frontend_react\\\\src\\\\components\\\\quiz\\\\Question.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = ({\n  question,\n  onAnswerChange,\n  currentAnswer,\n  disabled\n}) => {\n  if (!question) return null;\n  const {\n    id,\n    text,\n    question_type,\n    options\n  } = question;\n  const handleChange = e => {\n    const {\n      value,\n      checked\n    } = e.target;\n    if (question_type === 'mcq') {\n      // Single choice - Radio buttons\n      // Pass the actual Choice ID (option.id), not index\n      onAnswerChange(id, Number(value));\n    } else if (question_type === 'tf') {\n      // True/False Toggle (checkbox here)\n      onAnswerChange(id, checked);\n    } else if (question_type === 'text') {\n      onAnswerChange(id, value);\n    }\n    // For coding questions, handled separately.\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold mb-3\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), question_type === 'mcq' && options && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question_${id}`,\n          value: option.id // use actual Choice ID here\n          ,\n          checked: currentAnswer === option.id,\n          onChange: handleChange,\n          disabled: disabled,\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this), option.choice_text]\n      }, option.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), question_type === 'tf' && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: currentAnswer || false,\n        onChange: handleChange,\n        disabled: disabled,\n        className: \"mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), question_type === 'text' && /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: 4,\n      className: \"w-full p-2 border rounded\",\n      value: currentAnswer || '',\n      onChange: handleChange,\n      disabled: disabled,\n      placeholder: \"Type your answer here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Question","question","onAnswerChange","currentAnswer","disabled","id","text","question_type","options","handleChange","e","value","checked","target","Number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","type","name","onChange","choice_text","rows","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/varsa/Quiz-Website-Project/frontend_react/src/components/quiz/Question.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Question = ({ question, onAnswerChange, currentAnswer, disabled }) => {\r\n  if (!question) return null;\r\n  const { id, text, question_type, options } = question;\r\n\r\n  const handleChange = (e) => {\r\n    const { value, checked } = e.target;\r\n\r\n    if (question_type === 'mcq') {\r\n      // Single choice - Radio buttons\r\n      // Pass the actual Choice ID (option.id), not index\r\n      onAnswerChange(id, Number(value));\r\n    } else if (question_type === 'tf') {\r\n      // True/False Toggle (checkbox here)\r\n      onAnswerChange(id, checked);\r\n    } else if (question_type === 'text') {\r\n      onAnswerChange(id, value);\r\n    }\r\n    // For coding questions, handled separately.\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-6\">\r\n      <h3 className=\"text-xl font-semibold mb-3\">{text}</h3>\r\n\r\n      {question_type === 'mcq' && options && (\r\n        <div>\r\n          {options.map((option) => (\r\n            <label key={option.id} className=\"block mb-2\">\r\n              <input\r\n                type=\"radio\"\r\n                name={`question_${id}`}\r\n                value={option.id} // use actual Choice ID here\r\n                checked={currentAnswer === option.id}\r\n                onChange={handleChange}\r\n                disabled={disabled}\r\n                className=\"mr-2\"\r\n              />\r\n              {option.choice_text}\r\n            </label>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {question_type === 'tf' && (\r\n        <label className=\"block mb-2\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={currentAnswer || false}\r\n            onChange={handleChange}\r\n            disabled={disabled}\r\n            className=\"mr-2\"\r\n          />\r\n          {text}\r\n        </label>\r\n      )}\r\n\r\n      {question_type === 'text' && (\r\n        <textarea\r\n          rows={4}\r\n          className=\"w-full p-2 border rounded\"\r\n          value={currentAnswer || ''}\r\n          onChange={handleChange}\r\n          disabled={disabled}\r\n          placeholder=\"Type your answer here...\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}