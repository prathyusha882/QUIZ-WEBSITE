{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varsa\\\\Quiz-Website-Project\\\\frontend_react\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\nimport Question from '../components/quiz/Question';\nimport Timer from '../components/quiz/Timer';\nimport Loader from '../components/common/Loader';\nimport ErrorMessage from '../components/common/ErrorMessage';\nimport { toast } from 'react-toastify';\nimport api from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [searchParams] = useSearchParams();\n  const attemptId = searchParams.get('attempt');\n  const navigate = useNavigate();\n  const {\n    authToken\n  } = useAuth();\n  const [answers, setAnswers] = useState({});\n  const [quizDetails, setQuizDetails] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [alreadySubmitted, setAlreadySubmitted] = useState(false);\n  useEffect(() => {\n    if (!id || !attemptId) {\n      setError('Quiz ID or Attempt ID missing from URL.');\n      setLoading(false);\n      return;\n    }\n    if (!authToken) {\n      setError('Not authenticated. Please log in.');\n      setLoading(false);\n      return;\n    }\n    const fetchAttemptData = async () => {\n      try {\n        var _data$quiz, _data$quiz2, _ref, _data$duration_minute, _data$quiz3;\n        const attemptRes = await api.get(`student-quizzes/${attemptId}/`);\n        const data = attemptRes.data;\n\n        // If the attempt is already submitted, mark it\n        if (data.submitted) {\n          setAlreadySubmitted(true);\n        }\n        setQuizDetails({\n          title: data.quiz_title || ((_data$quiz = data.quiz) === null || _data$quiz === void 0 ? void 0 : _data$quiz.title) || 'Quiz',\n          description: data.quiz_description || ((_data$quiz2 = data.quiz) === null || _data$quiz2 === void 0 ? void 0 : _data$quiz2.description) || '',\n          duration_minutes: (_ref = (_data$duration_minute = data.duration_minutes) !== null && _data$duration_minute !== void 0 ? _data$duration_minute : (_data$quiz3 = data.quiz) === null || _data$quiz3 === void 0 ? void 0 : _data$quiz3.duration_minutes) !== null && _ref !== void 0 ? _ref : 60\n        });\n        setQuestions(Array.isArray(data.questions) ? data.questions : []);\n      } catch (err) {\n        console.error('Error fetching quiz attempt:', err);\n        setError('Failed to load quiz.');\n        toast.error('Failed to load quiz.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAttemptData();\n  }, [id, attemptId, authToken]);\n  const handleAnswerChange = (questionId, answer) => {\n    setAnswers(prev => ({\n      ...prev,\n      [String(questionId)]: answer\n    }));\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    message: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold text-gray-800\",\n        children: quizDetails === null || quizDetails === void 0 ? void 0 : quizDetails.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        durationMinutes: quizDetails === null || quizDetails === void 0 ? void 0 : quizDetails.duration_minutes,\n        onTimeUp: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: questions.length > 0 ? questions.map(question => /*#__PURE__*/_jsxDEV(Question, {\n        question: question,\n        onAnswerChange: handleAnswerChange,\n        currentAnswer: answers[String(question.id)],\n        disabled: alreadySubmitted // prevent changes if already submitted\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No questions available for this quiz.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: isSubmitting || alreadySubmitted,\n      className: `btn w-full mt-8 py-3 rounded-lg transition-colors ${alreadySubmitted ? 'bg-gray-400 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700 text-white'}`,\n      \"aria-label\": \"Submit Quiz\",\n      children: alreadySubmitted ? 'Quiz Already Submitted' : isSubmitting ? 'Submitting...' : 'Submit Quiz'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"S0MARFo7Tm+nj83EWjqaTIZEvTk=\", false, function () {\n  return [useParams, useSearchParams, useNavigate, useAuth];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","useSearchParams","Question","Timer","Loader","ErrorMessage","toast","api","useAuth","jsxDEV","_jsxDEV","QuizPage","_s","id","searchParams","attemptId","get","navigate","authToken","answers","setAnswers","quizDetails","setQuizDetails","questions","setQuestions","loading","setLoading","error","setError","isSubmitting","setIsSubmitting","alreadySubmitted","setAlreadySubmitted","fetchAttemptData","_data$quiz","_data$quiz2","_ref","_data$duration_minute","_data$quiz3","attemptRes","data","submitted","title","quiz_title","quiz","description","quiz_description","duration_minutes","Array","isArray","err","console","handleAnswerChange","questionId","answer","prev","String","fileName","_jsxFileName","lineNumber","columnNumber","message","className","children","durationMinutes","onTimeUp","handleSubmit","length","map","question","onAnswerChange","currentAnswer","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/varsa/Quiz-Website-Project/frontend_react/src/pages/QuizPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport Question from '../components/quiz/Question';\r\nimport Timer from '../components/quiz/Timer';\r\nimport Loader from '../components/common/Loader';\r\nimport ErrorMessage from '../components/common/ErrorMessage';\r\nimport { toast } from 'react-toastify';\r\nimport api from '../services/api';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst QuizPage = () => {\r\n  const { id } = useParams();\r\n  const [searchParams] = useSearchParams();\r\n  const attemptId = searchParams.get('attempt');\r\n  const navigate = useNavigate();\r\n  const { authToken } = useAuth();\r\n\r\n  const [answers, setAnswers] = useState({});\r\n  const [quizDetails, setQuizDetails] = useState(null);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [alreadySubmitted, setAlreadySubmitted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!id || !attemptId) {\r\n      setError('Quiz ID or Attempt ID missing from URL.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (!authToken) {\r\n      setError('Not authenticated. Please log in.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchAttemptData = async () => {\r\n      try {\r\n        const attemptRes = await api.get(`student-quizzes/${attemptId}/`);\r\n        const data = attemptRes.data;\r\n\r\n        // If the attempt is already submitted, mark it\r\n        if (data.submitted) {\r\n          setAlreadySubmitted(true);\r\n        }\r\n\r\n        setQuizDetails({\r\n          title: data.quiz_title || data.quiz?.title || 'Quiz',\r\n          description: data.quiz_description || data.quiz?.description || '',\r\n          duration_minutes: data.duration_minutes ?? data.quiz?.duration_minutes ?? 60,\r\n        });\r\n\r\n        setQuestions(Array.isArray(data.questions) ? data.questions : []);\r\n      } catch (err) {\r\n        console.error('Error fetching quiz attempt:', err);\r\n        setError('Failed to load quiz.');\r\n        toast.error('Failed to load quiz.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAttemptData();\r\n  }, [id, attemptId, authToken]);\r\n\r\n  const handleAnswerChange = (questionId, answer) => {\r\n    setAnswers((prev) => ({ ...prev, [String(questionId)]: answer }));\r\n  };\r\n\r\n  \r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <ErrorMessage message={error} />;\r\n\r\n  return (\r\n    <div className=\"container mx-auto mt-8\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h2 className=\"text-3xl font-bold text-gray-800\">{quizDetails?.title}</h2>\r\n        <Timer durationMinutes={quizDetails?.duration_minutes} onTimeUp={handleSubmit} />\r\n      </div>\r\n\r\n      <div className=\"space-y-6\">\r\n        {questions.length > 0 ? (\r\n          questions.map((question) => (\r\n            <Question\r\n              key={question.id}\r\n              question={question}\r\n              onAnswerChange={handleAnswerChange}\r\n              currentAnswer={answers[String(question.id)]}\r\n              disabled={alreadySubmitted} // prevent changes if already submitted\r\n            />\r\n          ))\r\n        ) : (\r\n          <p className=\"text-gray-500\">No questions available for this quiz.</p>\r\n        )}\r\n      </div>\r\n\r\n      <button\r\n        onClick={handleSubmit}\r\n        disabled={isSubmitting || alreadySubmitted}\r\n        className={`btn w-full mt-8 py-3 rounded-lg transition-colors ${\r\n          alreadySubmitted\r\n            ? 'bg-gray-400 cursor-not-allowed'\r\n            : 'bg-blue-600 hover:bg-blue-700 text-white'\r\n        }`}\r\n        aria-label=\"Submit Quiz\"\r\n      >\r\n        {alreadySubmitted ? 'Quiz Already Submitted' : isSubmitting ? 'Submitting...' : 'Submit Quiz'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AAC1E,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,YAAY,MAAM,mCAAmC;AAC5D,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,GAAG,MAAM,iBAAiB;AACjC,SAASC,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAG,CAAC,GAAGd,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACe,YAAY,CAAC,GAAGb,eAAe,CAAC,CAAC;EACxC,MAAMc,SAAS,GAAGD,YAAY,CAACE,GAAG,CAAC,SAAS,CAAC;EAC7C,MAAMC,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEkB;EAAU,CAAC,GAAGV,OAAO,CAAC,CAAC;EAE/B,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC6B,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACiC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAE/DD,SAAS,CAAC,MAAM;IACd,IAAI,CAACgB,EAAE,IAAI,CAACE,SAAS,EAAE;MACrBa,QAAQ,CAAC,yCAAyC,CAAC;MACnDF,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,IAAI,CAACR,SAAS,EAAE;MACdU,QAAQ,CAAC,mCAAmC,CAAC;MAC7CF,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,MAAMO,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QAAA,IAAAC,UAAA,EAAAC,WAAA,EAAAC,IAAA,EAAAC,qBAAA,EAAAC,WAAA;QACF,MAAMC,UAAU,GAAG,MAAMhC,GAAG,CAACS,GAAG,CAAC,mBAAmBD,SAAS,GAAG,CAAC;QACjE,MAAMyB,IAAI,GAAGD,UAAU,CAACC,IAAI;;QAE5B;QACA,IAAIA,IAAI,CAACC,SAAS,EAAE;UAClBT,mBAAmB,CAAC,IAAI,CAAC;QAC3B;QAEAV,cAAc,CAAC;UACboB,KAAK,EAAEF,IAAI,CAACG,UAAU,MAAAT,UAAA,GAAIM,IAAI,CAACI,IAAI,cAAAV,UAAA,uBAATA,UAAA,CAAWQ,KAAK,KAAI,MAAM;UACpDG,WAAW,EAAEL,IAAI,CAACM,gBAAgB,MAAAX,WAAA,GAAIK,IAAI,CAACI,IAAI,cAAAT,WAAA,uBAATA,WAAA,CAAWU,WAAW,KAAI,EAAE;UAClEE,gBAAgB,GAAAX,IAAA,IAAAC,qBAAA,GAAEG,IAAI,CAACO,gBAAgB,cAAAV,qBAAA,cAAAA,qBAAA,IAAAC,WAAA,GAAIE,IAAI,CAACI,IAAI,cAAAN,WAAA,uBAATA,WAAA,CAAWS,gBAAgB,cAAAX,IAAA,cAAAA,IAAA,GAAI;QAC5E,CAAC,CAAC;QAEFZ,YAAY,CAACwB,KAAK,CAACC,OAAO,CAACT,IAAI,CAACjB,SAAS,CAAC,GAAGiB,IAAI,CAACjB,SAAS,GAAG,EAAE,CAAC;MACnE,CAAC,CAAC,OAAO2B,GAAG,EAAE;QACZC,OAAO,CAACxB,KAAK,CAAC,8BAA8B,EAAEuB,GAAG,CAAC;QAClDtB,QAAQ,CAAC,sBAAsB,CAAC;QAChCtB,KAAK,CAACqB,KAAK,CAAC,sBAAsB,CAAC;MACrC,CAAC,SAAS;QACRD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDO,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACpB,EAAE,EAAEE,SAAS,EAAEG,SAAS,CAAC,CAAC;EAE9B,MAAMkC,kBAAkB,GAAGA,CAACC,UAAU,EAAEC,MAAM,KAAK;IACjDlC,UAAU,CAAEmC,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACC,MAAM,CAACH,UAAU,CAAC,GAAGC;IAAO,CAAC,CAAC,CAAC;EACnE,CAAC;EAID,IAAI7B,OAAO,EAAE,oBAAOf,OAAA,CAACN,MAAM;IAAAqD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC9B,IAAIjC,KAAK,EAAE,oBAAOjB,OAAA,CAACL,YAAY;IAACwD,OAAO,EAAElC;EAAM;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAElD,oBACElD,OAAA;IAAKoD,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCrD,OAAA;MAAKoD,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBACrDrD,OAAA;QAAIoD,SAAS,EAAC,kCAAkC;QAAAC,QAAA,EAAE1C,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEqB;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1ElD,OAAA,CAACP,KAAK;QAAC6D,eAAe,EAAE3C,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE0B,gBAAiB;QAACkB,QAAQ,EAAEC;MAAa;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9E,CAAC,eAENlD,OAAA;MAAKoD,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBxC,SAAS,CAAC4C,MAAM,GAAG,CAAC,GACnB5C,SAAS,CAAC6C,GAAG,CAAEC,QAAQ,iBACrB3D,OAAA,CAACR,QAAQ;QAEPmE,QAAQ,EAAEA,QAAS;QACnBC,cAAc,EAAElB,kBAAmB;QACnCmB,aAAa,EAAEpD,OAAO,CAACqC,MAAM,CAACa,QAAQ,CAACxD,EAAE,CAAC,CAAE;QAC5C2D,QAAQ,EAAEzC,gBAAiB,CAAC;MAAA,GAJvBsC,QAAQ,CAACxD,EAAE;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKjB,CACF,CAAC,gBAEFlD,OAAA;QAAGoD,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAqC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACtE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENlD,OAAA;MACE+D,OAAO,EAAEP,YAAa;MACtBM,QAAQ,EAAE3C,YAAY,IAAIE,gBAAiB;MAC3C+B,SAAS,EAAE,qDACT/B,gBAAgB,GACZ,gCAAgC,GAChC,0CAA0C,EAC7C;MACH,cAAW,aAAa;MAAAgC,QAAA,EAEvBhC,gBAAgB,GAAG,wBAAwB,GAAGF,YAAY,GAAG,eAAe,GAAG;IAAa;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAChD,EAAA,CAvGID,QAAQ;EAAA,QACGZ,SAAS,EACDE,eAAe,EAErBD,WAAW,EACNQ,OAAO;AAAA;AAAAkE,EAAA,GALzB/D,QAAQ;AAyGd,eAAeA,QAAQ;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}