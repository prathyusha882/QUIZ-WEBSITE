{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varsa\\\\Quiz-Website-Project\\\\frontend_react\\\\src\\\\components\\\\auth\\\\PasswordResetConfirmForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordResetConfirmForm = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const uid = searchParams.get('uid');\n  const token = searchParams.get('token');\n  const [newPassword, setNewPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (newPassword !== passwordConfirm) {\n      toast.error('Passwords do not match.');\n      return;\n    }\n    try {\n      await api.post('/users/password/reset/confirm/', {\n        uid,\n        token,\n        new_password: newPassword\n      });\n      toast.success('Password reset successfully. Please login.');\n      navigate('/login');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.error((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Reset failed. Please try again.');\n    }\n  };\n  if (!uid || !token) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto p-6 bg-white rounded shadow-md text-center text-red-600\",\n      children: \"Invalid or missing reset token.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto p-6 bg-white rounded shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6 text-indigo-700\",\n      children: \"Set New Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2 font-semibold\",\n        htmlFor: \"newPassword\",\n        children: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"newPassword\",\n        type: \"password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        required: true,\n        minLength: \"8\",\n        className: \"w-full p-2 border rounded mb-4\",\n        autoComplete: \"new-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2 font-semibold\",\n        htmlFor: \"passwordConfirm\",\n        children: \"Confirm New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"passwordConfirm\",\n        type: \"password\",\n        value: passwordConfirm,\n        onChange: e => setPasswordConfirm(e.target.value),\n        required: true,\n        minLength: \"8\",\n        className: \"w-full p-2 border rounded mb-6\",\n        autoComplete: \"new-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-indigo-600 hover:bg-indigo-700 text-white font-semibold py-2 rounded\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordResetConfirmForm, \"Hq3BwPqIj8fZruO2E+IV9lEMNiA=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = PasswordResetConfirmForm;\nexport default PasswordResetConfirmForm;\nvar _c;\n$RefreshReg$(_c, \"PasswordResetConfirmForm\");","map":{"version":3,"names":["React","useState","useNavigate","useSearchParams","toast","api","jsxDEV","_jsxDEV","PasswordResetConfirmForm","_s","searchParams","uid","get","token","newPassword","setNewPassword","passwordConfirm","setPasswordConfirm","navigate","handleSubmit","e","preventDefault","error","post","new_password","success","_error$response","_error$response$data","response","data","detail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","target","required","minLength","autoComplete","_c","$RefreshReg$"],"sources":["C:/Users/varsa/Quiz-Website-Project/frontend_react/src/components/auth/PasswordResetConfirmForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport api from '../../services/api';\r\n\r\nconst PasswordResetConfirmForm = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const uid = searchParams.get('uid');\r\n  const token = searchParams.get('token');\r\n\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [passwordConfirm, setPasswordConfirm] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (newPassword !== passwordConfirm) {\r\n      toast.error('Passwords do not match.');\r\n      return;\r\n    }\r\n    try {\r\n      await api.post('/users/password/reset/confirm/', { uid, token, new_password: newPassword });\r\n      toast.success('Password reset successfully. Please login.');\r\n      navigate('/login');\r\n    } catch (error) {\r\n      toast.error(error?.response?.data?.detail || 'Reset failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  if (!uid || !token) {\r\n    return (\r\n      <div className=\"max-w-md mx-auto p-6 bg-white rounded shadow-md text-center text-red-600\">\r\n        Invalid or missing reset token.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto p-6 bg-white rounded shadow-md\">\r\n      <h1 className=\"text-3xl font-bold mb-6 text-indigo-700\">Set New Password</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label className=\"block mb-2 font-semibold\" htmlFor=\"newPassword\">New Password</label>\r\n        <input\r\n          id=\"newPassword\"\r\n          type=\"password\"\r\n          value={newPassword}\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n          required\r\n          minLength=\"8\"\r\n          className=\"w-full p-2 border rounded mb-4\"\r\n          autoComplete=\"new-password\"\r\n        />\r\n\r\n        <label className=\"block mb-2 font-semibold\" htmlFor=\"passwordConfirm\">Confirm New Password</label>\r\n        <input\r\n          id=\"passwordConfirm\"\r\n          type=\"password\"\r\n          value={passwordConfirm}\r\n          onChange={(e) => setPasswordConfirm(e.target.value)}\r\n          required\r\n          minLength=\"8\"\r\n          className=\"w-full p-2 border rounded mb-6\"\r\n          autoComplete=\"new-password\"\r\n        />\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full bg-indigo-600 hover:bg-indigo-700 text-white font-semibold py-2 rounded\"\r\n        >\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordResetConfirmForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}