{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varsa\\\\Quiz-Website-Project\\\\frontend_react\\\\src\\\\components\\\\quiz\\\\Question.js\";\nimport React from 'react';\nimport CodeEditor from './CodeEditor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = ({\n  question,\n  onAnswerChange,\n  currentAnswer\n}) => {\n  const renderQuestionInput = () => {\n    var _question$choices;\n    switch (question.question_type) {\n      case 'mcq':\n        // Multiple Choice\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: (_question$choices = question.choices) === null || _question$choices === void 0 ? void 0 : _question$choices.map(choice => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block cursor-pointer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${question.id}`,\n              value: choice.choice_text,\n              checked: currentAnswer === choice.choice_text,\n              onChange: e => onAnswerChange(question.id, e.target.value),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 17\n            }, this), choice.choice_text]\n          }, choice.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this);\n      case 'text':\n        // Short text answer\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-input w-full\",\n          value: currentAnswer || '',\n          onChange: e => onAnswerChange(question.id, e.target.value),\n          placeholder: \"Type your answer here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this);\n      case 'tf':\n        // True / False\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: ['True', 'False'].map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block cursor-pointer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${question.id}`,\n              value: option,\n              checked: currentAnswer === option,\n              onChange: e => onAnswerChange(question.id, e.target.value),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), option]\n          }, option, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this);\n      case 'code':\n        // Coding question\n        return /*#__PURE__*/_jsxDEV(CodeEditor, {\n          code: currentAnswer || '',\n          onCodeChange: code => onAnswerChange(question.id, code)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Unsupported question type: \", question.question_type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mb-6 p-4 border rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: question.question_text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), renderQuestionInput()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","CodeEditor","jsxDEV","_jsxDEV","Question","question","onAnswerChange","currentAnswer","renderQuestionInput","_question$choices","question_type","className","children","choices","map","choice","type","name","id","value","choice_text","checked","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","option","code","onCodeChange","question_text","_c","$RefreshReg$"],"sources":["C:/Users/varsa/Quiz-Website-Project/frontend_react/src/components/quiz/Question.js"],"sourcesContent":["import React from 'react';\r\nimport CodeEditor from './CodeEditor';\r\n\r\nconst Question = ({ question, onAnswerChange, currentAnswer }) => {\r\n  const renderQuestionInput = () => {\r\n    switch (question.question_type) {\r\n      case 'mcq': // Multiple Choice\r\n        return (\r\n          <div className=\"space-y-4\">\r\n            {question.choices?.map((choice) => (\r\n              <label key={choice.id} className=\"block cursor-pointer\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name={`question-${question.id}`}\r\n                  value={choice.choice_text}\r\n                  checked={currentAnswer === choice.choice_text}\r\n                  onChange={(e) => onAnswerChange(question.id, e.target.value)}\r\n                  className=\"mr-2\"\r\n                />\r\n                {choice.choice_text}\r\n              </label>\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      case 'text': // Short text answer\r\n        return (\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-input w-full\"\r\n            value={currentAnswer || ''}\r\n            onChange={(e) => onAnswerChange(question.id, e.target.value)}\r\n            placeholder=\"Type your answer here...\"\r\n          />\r\n        );\r\n\r\n      case 'tf': // True / False\r\n        return (\r\n          <div className=\"space-y-2\">\r\n            {['True', 'False'].map((option) => (\r\n              <label key={option} className=\"block cursor-pointer\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name={`question-${question.id}`}\r\n                  value={option}\r\n                  checked={currentAnswer === option}\r\n                  onChange={(e) => onAnswerChange(question.id, e.target.value)}\r\n                  className=\"mr-2\"\r\n                />\r\n                {option}\r\n              </label>\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      case 'code': // Coding question\r\n        return (\r\n          <CodeEditor\r\n            code={currentAnswer || ''}\r\n            onCodeChange={(code) => onAnswerChange(question.id, code)}\r\n          />\r\n        );\r\n\r\n      default:\r\n        return <p>Unsupported question type: {question.question_type}</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card mb-6 p-4 border rounded shadow\">\r\n      <h3 className=\"text-xl font-semibold mb-4\">{question.question_text}</h3>\r\n      {renderQuestionInput()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}