{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varsa\\\\Quiz-Website-Project\\\\frontend_react\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [authToken, setAuthToken] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [userEmail, setUserEmail] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token'); // changed here\n    const id = localStorage.getItem('userId');\n    const email = localStorage.getItem('userEmail');\n    if (token && id && email) {\n      setAuthToken(token);\n      setUserId(id);\n      setUserEmail(email);\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const login = (token, id, email) => {\n    localStorage.setItem('token', token); // changed here\n    localStorage.setItem('userId', id);\n    localStorage.setItem('userEmail', email);\n    setAuthToken(token);\n    setUserId(id);\n    setUserEmail(email);\n    setIsLoggedIn(true);\n  };\n  const logout = () => {\n    localStorage.removeItem('token'); // changed here\n    localStorage.removeItem('userId');\n    localStorage.removeItem('userEmail');\n    setAuthToken(null);\n    setUserId(null);\n    setUserEmail(null);\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authToken,\n      userId,\n      userEmail,\n      isLoggedIn,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"6IESShdd5GceqVeoCmTkv4e6jKE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","authToken","setAuthToken","userId","setUserId","userEmail","setUserEmail","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","id","email","login","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/varsa/Quiz-Website-Project/frontend_react/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [authToken, setAuthToken] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [userEmail, setUserEmail] = useState(null);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');      // changed here\r\n    const id = localStorage.getItem('userId');\r\n    const email = localStorage.getItem('userEmail');\r\n\r\n    if (token && id && email) {\r\n      setAuthToken(token);\r\n      setUserId(id);\r\n      setUserEmail(email);\r\n      setIsLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  const login = (token, id, email) => {\r\n    localStorage.setItem('token', token);             // changed here\r\n    localStorage.setItem('userId', id);\r\n    localStorage.setItem('userEmail', email);\r\n\r\n    setAuthToken(token);\r\n    setUserId(id);\r\n    setUserEmail(email);\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');                  // changed here\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('userEmail');\r\n\r\n    setAuthToken(null);\r\n    setUserId(null);\r\n    setUserEmail(null);\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authToken, userId, userEmail, isLoggedIn, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMiB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAM;IAClD,MAAMC,EAAE,GAAGF,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IACzC,MAAME,KAAK,GAAGH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAE/C,IAAIF,KAAK,IAAIG,EAAE,IAAIC,KAAK,EAAE;MACxBX,YAAY,CAACO,KAAK,CAAC;MACnBL,SAAS,CAACQ,EAAE,CAAC;MACbN,YAAY,CAACO,KAAK,CAAC;MACnBL,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,KAAK,GAAGA,CAACL,KAAK,EAAEG,EAAE,EAAEC,KAAK,KAAK;IAClCH,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEN,KAAK,CAAC,CAAC,CAAa;IAClDC,YAAY,CAACK,OAAO,CAAC,QAAQ,EAAEH,EAAE,CAAC;IAClCF,YAAY,CAACK,OAAO,CAAC,WAAW,EAAEF,KAAK,CAAC;IAExCX,YAAY,CAACO,KAAK,CAAC;IACnBL,SAAS,CAACQ,EAAE,CAAC;IACbN,YAAY,CAACO,KAAK,CAAC;IACnBL,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMQ,MAAM,GAAGA,CAAA,KAAM;IACnBN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC,CAAC,CAAkB;IACnDP,YAAY,CAACO,UAAU,CAAC,QAAQ,CAAC;IACjCP,YAAY,CAACO,UAAU,CAAC,WAAW,CAAC;IAEpCf,YAAY,CAAC,IAAI,CAAC;IAClBE,SAAS,CAAC,IAAI,CAAC;IACfE,YAAY,CAAC,IAAI,CAAC;IAClBE,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEd,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAElB,SAAS;MAAEE,MAAM;MAAEE,SAAS;MAAEE,UAAU;MAAEO,KAAK;MAAEE;IAAO,CAAE;IAAAjB,QAAA,EACtFA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvB,GAAA,CA9CWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}