{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varsa\\\\Quiz-Website-Project\\\\frontend_react\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    const storedUser = localStorage.getItem('quizUser');\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n  const [accessToken, setAccessToken] = useState(() => localStorage.getItem('quizAccessToken'));\n  const [refreshToken, setRefreshToken] = useState(() => localStorage.getItem('quizRefreshToken'));\n\n  // Save tokens and user to localStorage\n  const saveAuth = (userData, access, refresh) => {\n    localStorage.setItem('quizUser', JSON.stringify(userData));\n    localStorage.setItem('quizAccessToken', access);\n    localStorage.setItem('quizRefreshToken', refresh);\n    setUser(userData);\n    setAccessToken(access);\n    setRefreshToken(refresh);\n  };\n\n  // Login function\n  const login = async ({\n    username,\n    password\n  }) => {\n    const res = await api.post('/users/login/', {\n      username,\n      password\n    });\n    const {\n      access,\n      refresh\n    } = res.data;\n    const userRes = await api.get('/users/profile/', {\n      headers: {\n        Authorization: `Bearer ${access}`\n      }\n    });\n    saveAuth(userRes.data, access, refresh);\n  };\n\n  // Signup function\n  const signup = async ({\n    username,\n    email,\n    password\n  }) => {\n    await api.post('/users/register/', {\n      username,\n      email,\n      password\n    });\n  };\n\n  // Logout function (just clear tokens/state; navigation handled in component)\n  const logout = () => {\n    localStorage.removeItem('quizUser');\n    localStorage.removeItem('quizAccessToken');\n    localStorage.removeItem('quizRefreshToken');\n    setUser(null);\n    setAccessToken(null);\n    setRefreshToken(null);\n  };\n\n  // Periodic token refresh logic (optional; navigation after error must be in component)\n  // You can add logic here, but do not use useNavigate!\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      accessToken,\n      refreshToken,\n      login,\n      signup,\n      logout,\n      setUser,\n      setAccessToken,\n      setRefreshToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"mmZ3DRpuADznybUaEQgmYIxch60=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","accessToken","setAccessToken","refreshToken","setRefreshToken","saveAuth","userData","access","refresh","setItem","stringify","login","username","password","res","post","data","userRes","get","headers","Authorization","signup","email","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/varsa/Quiz-Website-Project/frontend_react/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(() => {\r\n    const storedUser = localStorage.getItem('quizUser');\r\n    return storedUser ? JSON.parse(storedUser) : null;\r\n  });\r\n  const [accessToken, setAccessToken] = useState(() => localStorage.getItem('quizAccessToken'));\r\n  const [refreshToken, setRefreshToken] = useState(() => localStorage.getItem('quizRefreshToken'));\r\n\r\n  // Save tokens and user to localStorage\r\n  const saveAuth = (userData, access, refresh) => {\r\n    localStorage.setItem('quizUser', JSON.stringify(userData));\r\n    localStorage.setItem('quizAccessToken', access);\r\n    localStorage.setItem('quizRefreshToken', refresh);\r\n    setUser(userData);\r\n    setAccessToken(access);\r\n    setRefreshToken(refresh);\r\n  };\r\n\r\n  // Login function\r\n  const login = async ({ username, password }) => {\r\n    const res = await api.post('/users/login/', { username, password });\r\n    const { access, refresh } = res.data;\r\n    const userRes = await api.get('/users/profile/', {\r\n      headers: { Authorization: `Bearer ${access}` },\r\n    });\r\n    saveAuth(userRes.data, access, refresh);\r\n  };\r\n\r\n  // Signup function\r\n  const signup = async ({ username, email, password }) => {\r\n    await api.post('/users/register/', { username, email, password });\r\n  };\r\n\r\n  // Logout function (just clear tokens/state; navigation handled in component)\r\n  const logout = () => {\r\n    localStorage.removeItem('quizUser');\r\n    localStorage.removeItem('quizAccessToken');\r\n    localStorage.removeItem('quizRefreshToken');\r\n    setUser(null);\r\n    setAccessToken(null);\r\n    setRefreshToken(null);\r\n  };\r\n\r\n  // Periodic token refresh logic (optional; navigation after error must be in component)\r\n  // You can add logic here, but do not use useNavigate!\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        accessToken,\r\n        refreshToken,\r\n        login,\r\n        signup,\r\n        logout,\r\n        setUser,\r\n        setAccessToken,\r\n        setRefreshToken,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}