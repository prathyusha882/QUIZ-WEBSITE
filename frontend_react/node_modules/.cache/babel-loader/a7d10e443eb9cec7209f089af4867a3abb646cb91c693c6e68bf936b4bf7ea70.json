{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varsa\\\\Quiz-Website-Project\\\\frontend_react\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useSearchParams, useNavigate } from 'react-router-dom';\nimport Question from '../components/quiz/Question';\nimport Timer from '../components/quiz/Timer';\nimport Loader from '../components/common/Loader';\nimport { toast } from 'react-toastify';\nimport api from '../api'; // your axios instance or fetch wrapper\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DRAFT_KEY_PREFIX = 'quiz_draft_';\nconst QuizPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // quiz id\n  const [searchParams] = useSearchParams();\n  const attemptId = searchParams.get('attempt');\n  const navigate = useNavigate();\n  const {\n    accessToken\n  } = useAuth();\n  const [quiz, setQuiz] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [answers, setAnswers] = useState({});\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitError, setSubmitError] = useState('');\n  const [alreadySubmitted, setAlreadySubmitted] = useState(false);\n\n  // Load attempt, quiz and answers draft from localStorage\n  useEffect(() => {\n    if (!id || !attemptId) {\n      setError('Quiz or attempt ID missing.');\n      setLoading(false);\n      return;\n    }\n    (async () => {\n      try {\n        const {\n          data\n        } = await api.get(`/student-quizzes/${attemptId}/`, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        setQuiz(data.quiz);\n        setQuestions(data.quiz.questions);\n        if (data.submitted) {\n          setAlreadySubmitted(true);\n          setAnswers(data.answers.reduce((acc, ans) => {\n            var _ans$selected_option;\n            acc[ans.question] = (_ans$selected_option = ans.selected_option) !== null && _ans$selected_option !== void 0 ? _ans$selected_option : ans.answer_text;\n            return acc;\n          }, {}));\n        } else {\n          const draft = localStorage.getItem(DRAFT_KEY_PREFIX + attemptId);\n          setAnswers(draft ? JSON.parse(draft) : {});\n        }\n      } catch (err) {\n        setError('Failed to load quiz attempt.');\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [id, attemptId, accessToken]);\n\n  // Auto-save answers draft to localStorage\n  useEffect(() => {\n    if (attemptId && !alreadySubmitted) {\n      localStorage.setItem(DRAFT_KEY_PREFIX + attemptId, JSON.stringify(answers));\n    }\n  }, [answers, attemptId, alreadySubmitted]);\n  const updateAnswer = (questionId, answer) => setAnswers(prev => ({\n    ...prev,\n    [questionId]: answer\n  }));\n  const goNext = () => {\n    if (currentIndex < questions.length - 1) setCurrentIndex(i => i + 1);\n  };\n  const goPrev = () => {\n    if (currentIndex > 0) setCurrentIndex(i => i - 1);\n  };\n  const handleSubmit = useCallback(async () => {\n    if (alreadySubmitted) {\n      toast.info('Quiz already submitted.');\n      return;\n    }\n    if (!window.confirm('Are you sure you want to submit the quiz?')) return;\n    setIsSubmitting(true);\n    setSubmitError('');\n    try {\n      const answersPayload = Object.entries(answers).map(([qid, answer]) => {\n        if (typeof answer === 'string') {\n          if (answer.trim() === '') return null;\n          return {\n            question: Number(qid),\n            answer_text: answer\n          };\n        }\n        return {\n          question: Number(qid),\n          selected_option: answer\n        };\n      }).filter(Boolean);\n      if (answersPayload.length === 0) {\n        setSubmitError('Please answer at least one question.');\n        setIsSubmitting(false);\n        return;\n      }\n      const res = await api.post(`/student-quizzes/${attemptId}/submit/`, {\n        answers: answersPayload\n      }, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      toast.success('Quiz submitted successfully!');\n      localStorage.removeItem(DRAFT_KEY_PREFIX + attemptId);\n      setAlreadySubmitted(true);\n      navigate(`/results/${attemptId}`, {\n        state: {\n          result: res.data\n        }\n      });\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const msg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || err.message || 'Submission failed.';\n      setSubmitError(msg);\n      toast.error(msg);\n    } finally {\n      setIsSubmitting(false);\n    }\n  }, [answers, attemptId, accessToken, alreadySubmitted, navigate]);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 21\n  }, this);\n  const question = questions[currentIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl mb-4 font-semibold text-indigo-700\",\n      children: [\"Quiz: \", quiz.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Timer, {\n      durationMinutes: quiz.duration_minutes,\n      onTimeUp: () => {\n        if (!alreadySubmitted) handleSubmit();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Question, {\n      question: question,\n      answer: answers[question.id],\n      onAnswerChange: updateAnswer,\n      disabled: alreadySubmitted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: currentIndex === 0,\n        className: \"btn bg-indigo-600 text-white px-6 py-2 rounded disabled:bg-gray-300\",\n        onClick: goPrev,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), currentIndex < questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn bg-indigo-600 text-white px-6 py-2 rounded\",\n        onClick: goNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn px-6 py-2 rounded ${alreadySubmitted ? 'bg-gray-400 cursor-not-allowed' : 'bg-green-600 hover:bg-green-700 text-white'}`,\n        disabled: alreadySubmitted || isSubmitting,\n        onClick: handleSubmit,\n        children: isSubmitting ? 'Submitting...' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), submitError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-red-600 font-semibold\",\n      children: submitError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"hTBsUNj4L7e/fNe51dF6qI9tfZo=\", false, function () {\n  return [useParams, useSearchParams, useNavigate, useAuth];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useSearchParams","useNavigate","Question","Timer","Loader","toast","api","useAuth","jsxDEV","_jsxDEV","DRAFT_KEY_PREFIX","QuizPage","_s","id","searchParams","attemptId","get","navigate","accessToken","quiz","setQuiz","questions","setQuestions","loading","setLoading","error","setError","answers","setAnswers","currentIndex","setCurrentIndex","isSubmitting","setIsSubmitting","submitError","setSubmitError","alreadySubmitted","setAlreadySubmitted","data","headers","Authorization","submitted","reduce","acc","ans","_ans$selected_option","question","selected_option","answer_text","draft","localStorage","getItem","JSON","parse","err","setItem","stringify","updateAnswer","questionId","answer","prev","goNext","length","i","goPrev","handleSubmit","info","window","confirm","answersPayload","Object","entries","map","qid","trim","Number","filter","Boolean","res","post","success","removeItem","state","result","_err$response","_err$response$data","msg","response","detail","message","fileName","_jsxFileName","lineNumber","columnNumber","className","children","title","durationMinutes","duration_minutes","onTimeUp","onAnswerChange","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/varsa/Quiz-Website-Project/frontend_react/src/pages/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, useSearchParams, useNavigate } from 'react-router-dom';\r\nimport Question from '../components/quiz/Question';\r\nimport Timer from '../components/quiz/Timer';\r\nimport Loader from '../components/common/Loader';\r\nimport { toast } from 'react-toastify';\r\nimport api from '../api'; // your axios instance or fetch wrapper\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst DRAFT_KEY_PREFIX = 'quiz_draft_';\r\n\r\nconst QuizPage = () => {\r\n  const { id } = useParams();  // quiz id\r\n  const [searchParams] = useSearchParams();\r\n  const attemptId = searchParams.get('attempt');\r\n  const navigate = useNavigate();\r\n  const { accessToken } = useAuth();\r\n\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [answers, setAnswers] = useState({});\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitError, setSubmitError] = useState('');\r\n  const [alreadySubmitted, setAlreadySubmitted] = useState(false);\r\n\r\n  // Load attempt, quiz and answers draft from localStorage\r\n  useEffect(() => {\r\n    if (!id || !attemptId) {\r\n      setError('Quiz or attempt ID missing.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    (async () => {\r\n      try {\r\n        const { data } = await api.get(`/student-quizzes/${attemptId}/`, {\r\n          headers: {Authorization: `Bearer ${accessToken}`}\r\n        });\r\n        setQuiz(data.quiz);\r\n        setQuestions(data.quiz.questions);\r\n        if (data.submitted) {\r\n          setAlreadySubmitted(true);\r\n          setAnswers(data.answers.reduce((acc, ans) => {\r\n            acc[ans.question] = ans.selected_option ?? ans.answer_text;\r\n            return acc;\r\n          }, {}));\r\n        } else {\r\n          const draft = localStorage.getItem(DRAFT_KEY_PREFIX + attemptId);\r\n          setAnswers(draft ? JSON.parse(draft) : {});\r\n        }\r\n      } catch (err) {\r\n        setError('Failed to load quiz attempt.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, [id, attemptId, accessToken]);\r\n\r\n  // Auto-save answers draft to localStorage\r\n  useEffect(() => {\r\n    if (attemptId && !alreadySubmitted) {\r\n      localStorage.setItem(DRAFT_KEY_PREFIX + attemptId, JSON.stringify(answers));\r\n    }\r\n  }, [answers, attemptId, alreadySubmitted]);\r\n\r\n  const updateAnswer = (questionId, answer) =>\r\n    setAnswers(prev => ({ ...prev, [questionId]: answer }));\r\n\r\n  const goNext = () => {\r\n    if (currentIndex < questions.length - 1) setCurrentIndex(i => i + 1);\r\n  };\r\n  const goPrev = () => {\r\n    if (currentIndex > 0) setCurrentIndex(i => i - 1);\r\n  };\r\n\r\n  const handleSubmit = useCallback(async () => {\r\n    if (alreadySubmitted) {\r\n      toast.info('Quiz already submitted.');\r\n      return;\r\n    }\r\n    if (!window.confirm('Are you sure you want to submit the quiz?')) return;\r\n\r\n    setIsSubmitting(true);\r\n    setSubmitError('');\r\n\r\n    try {\r\n      const answersPayload = Object.entries(answers).map(([qid, answer]) => {\r\n        if (typeof answer === 'string') {\r\n          if (answer.trim() === '') return null;\r\n          return {\r\n            question: Number(qid),\r\n            answer_text: answer,\r\n          };\r\n        }\r\n        return {\r\n          question: Number(qid),\r\n          selected_option: answer,\r\n        };\r\n      }).filter(Boolean);\r\n\r\n      if (answersPayload.length === 0) {\r\n        setSubmitError('Please answer at least one question.');\r\n        setIsSubmitting(false);\r\n        return;\r\n      }\r\n\r\n      const res = await api.post(\r\n        `/student-quizzes/${attemptId}/submit/`,\r\n        { answers: answersPayload },\r\n        {\r\n          headers: { Authorization: `Bearer ${accessToken}` },\r\n        }\r\n      );\r\n      toast.success('Quiz submitted successfully!');\r\n      localStorage.removeItem(DRAFT_KEY_PREFIX + attemptId);\r\n      setAlreadySubmitted(true);\r\n      navigate(`/results/${attemptId}`, { state: { result: res.data } });\r\n    } catch (err) {\r\n      const msg = err.response?.data?.detail || err.message || 'Submission failed.';\r\n      setSubmitError(msg);\r\n      toast.error(msg);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  }, [answers, attemptId, accessToken, alreadySubmitted, navigate]);\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <div className=\"text-center text-red-600\">{error}</div>;\r\n\r\n  const question = questions[currentIndex];\r\n\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto p-4\">\r\n      <h1 className=\"text-4xl mb-4 font-semibold text-indigo-700\">Quiz: {quiz.title}</h1>\r\n      <Timer\r\n        durationMinutes={quiz.duration_minutes}\r\n        onTimeUp={() => {\r\n          if (!alreadySubmitted) handleSubmit();\r\n        }}\r\n      />\r\n      <Question\r\n        question={question}\r\n        answer={answers[question.id]}\r\n        onAnswerChange={updateAnswer}\r\n        disabled={alreadySubmitted}\r\n      />\r\n\r\n      <div className=\"flex justify-between mt-6\">\r\n        <button\r\n          disabled={currentIndex === 0}\r\n          className=\"btn bg-indigo-600 text-white px-6 py-2 rounded disabled:bg-gray-300\"\r\n          onClick={goPrev}\r\n        >\r\n          Previous\r\n        </button>\r\n        {currentIndex < questions.length - 1 ? (\r\n          <button\r\n            className=\"btn bg-indigo-600 text-white px-6 py-2 rounded\"\r\n            onClick={goNext}\r\n          >\r\n            Next\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className={`btn px-6 py-2 rounded ${\r\n              alreadySubmitted ? 'bg-gray-400 cursor-not-allowed' : 'bg-green-600 hover:bg-green-700 text-white'\r\n            }`}\r\n            disabled={alreadySubmitted || isSubmitting}\r\n            onClick={handleSubmit}\r\n          >\r\n            {isSubmitting ? 'Submitting...' : 'Submit'}\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {submitError && (\r\n        <div className=\"mt-4 text-red-600 font-semibold\">{submitError}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}