{"ast":null,"code":"var _jsxFileName = \"/frontend_react/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { refreshToken as apiRefreshToken, logoutUser } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [authToken, setAuthToken] = useState(() => localStorage.getItem('authToken') || null);\n  const [userId, setUserId] = useState(() => localStorage.getItem('userId') || null);\n  const [userEmail, setUserEmail] = useState(() => localStorage.getItem('userEmail') || null);\n  const [userName, setUserName] = useState(() => localStorage.getItem('userName') || null);\n  const [refresh, setRefresh] = useState(() => localStorage.getItem('refreshToken') || null);\n  const [isLoggedIn, setIsLoggedIn] = useState(() => !!localStorage.getItem('authToken'));\n  useEffect(() => {\n    // Optional: sync state if localStorage changes outside React\n    const handleStorageChange = () => {\n      setAuthToken(localStorage.getItem('authToken'));\n      setUserId(localStorage.getItem('userId'));\n      setUserEmail(localStorage.getItem('userEmail'));\n      setUserName(localStorage.getItem('userName'));\n      setRefresh(localStorage.getItem('refreshToken'));\n      setIsLoggedIn(!!localStorage.getItem('authToken'));\n    };\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []);\n\n  // login function called from LoginForm\n  const login = (accessToken, id, email, name = null, refreshToken = null) => {\n    localStorage.setItem('authToken', accessToken);\n    if (refreshToken) localStorage.setItem('refreshToken', refreshToken);\n    localStorage.setItem('userId', id);\n    localStorage.setItem('userEmail', email);\n    if (name) localStorage.setItem('userName', name);\n    setAuthToken(accessToken);\n    setUserId(id);\n    setUserEmail(email);\n    setUserName(name);\n    setRefresh(refreshToken);\n    setIsLoggedIn(true);\n  };\n\n  // logout function\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('refreshToken');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('userEmail');\n    localStorage.removeItem('userName');\n    setAuthToken(null);\n    setUserId(null);\n    setUserEmail(null);\n    setUserName(null);\n    setRefresh(null);\n    setIsLoggedIn(false);\n    logoutUser();\n  };\n\n  // refresh access token if expired\n  const refreshAccessToken = async () => {\n    if (refresh) {\n      try {\n        const res = await apiRefreshToken(refresh);\n        const {\n          access\n        } = res.data;\n        setAuthToken(access);\n        localStorage.setItem('authToken', access);\n        return access;\n      } catch (err) {\n        console.error('Token refresh failed', err);\n        logout(); // logout if refresh fails\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authToken,\n      userId,\n      userEmail,\n      userName,\n      refresh,\n      isLoggedIn,\n      login,\n      logout,\n      refreshAccessToken,\n      setAuthToken,\n      setUserId,\n      setUserEmail,\n      setUserName,\n      setRefresh\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"U76uPMYy/JWz8XmkWB0E56WDSQs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","refreshToken","apiRefreshToken","logoutUser","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","authToken","setAuthToken","localStorage","getItem","userId","setUserId","userEmail","setUserEmail","userName","setUserName","refresh","setRefresh","isLoggedIn","setIsLoggedIn","handleStorageChange","window","addEventListener","removeEventListener","login","accessToken","id","email","name","setItem","logout","removeItem","refreshAccessToken","res","access","data","err","console","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/frontend_react/src/contexts/AuthContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { refreshToken as apiRefreshToken, logoutUser } from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [authToken, setAuthToken] = useState(() => localStorage.getItem('authToken') || null);\r\n  const [userId, setUserId] = useState(() => localStorage.getItem('userId') || null);\r\n  const [userEmail, setUserEmail] = useState(() => localStorage.getItem('userEmail') || null);\r\n  const [userName, setUserName] = useState(() => localStorage.getItem('userName') || null);\r\n  const [refresh, setRefresh] = useState(() => localStorage.getItem('refreshToken') || null);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(() => !!localStorage.getItem('authToken'));\r\n\r\n  useEffect(() => {\r\n    // Optional: sync state if localStorage changes outside React\r\n    const handleStorageChange = () => {\r\n      setAuthToken(localStorage.getItem('authToken'));\r\n      setUserId(localStorage.getItem('userId'));\r\n      setUserEmail(localStorage.getItem('userEmail'));\r\n      setUserName(localStorage.getItem('userName'));\r\n      setRefresh(localStorage.getItem('refreshToken'));\r\n      setIsLoggedIn(!!localStorage.getItem('authToken'));\r\n    };\r\n\r\n    window.addEventListener('storage', handleStorageChange);\r\n    return () => window.removeEventListener('storage', handleStorageChange);\r\n  }, []);\r\n\r\n  // login function called from LoginForm\r\n  const login = (accessToken, id, email, name = null, refreshToken = null) => {\r\n    localStorage.setItem('authToken', accessToken);\r\n    if (refreshToken) localStorage.setItem('refreshToken', refreshToken);\r\n    localStorage.setItem('userId', id);\r\n    localStorage.setItem('userEmail', email);\r\n    if (name) localStorage.setItem('userName', name);\r\n\r\n    setAuthToken(accessToken);\r\n    setUserId(id);\r\n    setUserEmail(email);\r\n    setUserName(name);\r\n    setRefresh(refreshToken);\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  // logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('refreshToken');\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('userEmail');\r\n    localStorage.removeItem('userName');\r\n\r\n    setAuthToken(null);\r\n    setUserId(null);\r\n    setUserEmail(null);\r\n    setUserName(null);\r\n    setRefresh(null);\r\n    setIsLoggedIn(false);\r\n    logoutUser();\r\n  };\r\n\r\n  // refresh access token if expired\r\n  const refreshAccessToken = async () => {\r\n    if (refresh) {\r\n      try {\r\n        const res = await apiRefreshToken(refresh);\r\n        const { access } = res.data;\r\n        setAuthToken(access);\r\n        localStorage.setItem('authToken', access);\r\n        return access;\r\n      } catch (err) {\r\n        console.error('Token refresh failed', err);\r\n        logout(); // logout if refresh fails\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        authToken,\r\n        userId,\r\n        userEmail,\r\n        userName,\r\n        refresh,\r\n        isLoggedIn,\r\n        login,\r\n        logout,\r\n        refreshAccessToken,\r\n        setAuthToken,\r\n        setUserId,\r\n        setUserEmail,\r\n        setUserName,\r\n        setRefresh,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,YAAY,IAAIC,eAAe,EAAEC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGT,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMU,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMV,UAAU,CAACQ,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,MAAMe,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC;EAC3F,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,MAAMe,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC;EAClF,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,MAAMe,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC;EAC3F,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,MAAMe,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;EACxF,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,MAAMe,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC;EAC1F,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,MAAM,CAAC,CAACe,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;EAEvFf,SAAS,CAAC,MAAM;IACd;IACA,MAAM0B,mBAAmB,GAAGA,CAAA,KAAM;MAChCb,YAAY,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;MAC/CE,SAAS,CAACH,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;MACzCI,YAAY,CAACL,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;MAC/CM,WAAW,CAACP,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;MAC7CQ,UAAU,CAACT,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;MAChDU,aAAa,CAAC,CAAC,CAACX,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;IACpD,CAAC;IAEDY,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEF,mBAAmB,CAAC;IACvD,OAAO,MAAMC,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEH,mBAAmB,CAAC;EACzE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMI,KAAK,GAAGA,CAACC,WAAW,EAAEC,EAAE,EAAEC,KAAK,EAAEC,IAAI,GAAG,IAAI,EAAEjC,YAAY,GAAG,IAAI,KAAK;IAC1Ea,YAAY,CAACqB,OAAO,CAAC,WAAW,EAAEJ,WAAW,CAAC;IAC9C,IAAI9B,YAAY,EAAEa,YAAY,CAACqB,OAAO,CAAC,cAAc,EAAElC,YAAY,CAAC;IACpEa,YAAY,CAACqB,OAAO,CAAC,QAAQ,EAAEH,EAAE,CAAC;IAClClB,YAAY,CAACqB,OAAO,CAAC,WAAW,EAAEF,KAAK,CAAC;IACxC,IAAIC,IAAI,EAAEpB,YAAY,CAACqB,OAAO,CAAC,UAAU,EAAED,IAAI,CAAC;IAEhDrB,YAAY,CAACkB,WAAW,CAAC;IACzBd,SAAS,CAACe,EAAE,CAAC;IACbb,YAAY,CAACc,KAAK,CAAC;IACnBZ,WAAW,CAACa,IAAI,CAAC;IACjBX,UAAU,CAACtB,YAAY,CAAC;IACxBwB,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;;EAED;EACA,MAAMW,MAAM,GAAGA,CAAA,KAAM;IACnBtB,YAAY,CAACuB,UAAU,CAAC,WAAW,CAAC;IACpCvB,YAAY,CAACuB,UAAU,CAAC,cAAc,CAAC;IACvCvB,YAAY,CAACuB,UAAU,CAAC,QAAQ,CAAC;IACjCvB,YAAY,CAACuB,UAAU,CAAC,WAAW,CAAC;IACpCvB,YAAY,CAACuB,UAAU,CAAC,UAAU,CAAC;IAEnCxB,YAAY,CAAC,IAAI,CAAC;IAClBI,SAAS,CAAC,IAAI,CAAC;IACfE,YAAY,CAAC,IAAI,CAAC;IAClBE,WAAW,CAAC,IAAI,CAAC;IACjBE,UAAU,CAAC,IAAI,CAAC;IAChBE,aAAa,CAAC,KAAK,CAAC;IACpBtB,UAAU,CAAC,CAAC;EACd,CAAC;;EAED;EACA,MAAMmC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAIhB,OAAO,EAAE;MACX,IAAI;QACF,MAAMiB,GAAG,GAAG,MAAMrC,eAAe,CAACoB,OAAO,CAAC;QAC1C,MAAM;UAAEkB;QAAO,CAAC,GAAGD,GAAG,CAACE,IAAI;QAC3B5B,YAAY,CAAC2B,MAAM,CAAC;QACpB1B,YAAY,CAACqB,OAAO,CAAC,WAAW,EAAEK,MAAM,CAAC;QACzC,OAAOA,MAAM;MACf,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;QAC1CN,MAAM,CAAC,CAAC,CAAC,CAAC;MACZ;IACF;EACF,CAAC;EAED,oBACE/B,OAAA,CAACC,WAAW,CAACuC,QAAQ;IACnBC,KAAK,EAAE;MACLlC,SAAS;MACTI,MAAM;MACNE,SAAS;MACTE,QAAQ;MACRE,OAAO;MACPE,UAAU;MACVM,KAAK;MACLM,MAAM;MACNE,kBAAkB;MAClBzB,YAAY;MACZI,SAAS;MACTE,YAAY;MACZE,WAAW;MACXE;IACF,CAAE;IAAAb,QAAA,EAEDA;EAAQ;IAAAqC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvC,GAAA,CA9FWF,YAAY;AAAA0C,EAAA,GAAZ1C,YAAY;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}