{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varsa\\\\Quiz-Website-Project\\\\frontend_react\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [authToken, setAuthToken] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [userEmail, setUserEmail] = useState(null);\n  const [userName, setUserName] = useState(null); // Added userName state\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    // Keep keys consistent with api.js and LoginForm.jsx\n    const token = localStorage.getItem('access_token');\n    const id = localStorage.getItem('user_id');\n    const email = localStorage.getItem('user_email');\n    const name = localStorage.getItem('user_name'); // Added retrieval\n\n    if (token && id && email) {\n      setAuthToken(token);\n      setUserId(id);\n      setUserEmail(email);\n      setUserName(name || null); // Set userName if exists\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const login = (token, id, email, name) => {\n    localStorage.setItem('access_token', token);\n    localStorage.setItem('user_id', id);\n    localStorage.setItem('user_email', email);\n    localStorage.setItem('user_name', name); // Save userName\n\n    setAuthToken(token);\n    setUserId(id);\n    setUserEmail(email);\n    setUserName(name);\n    setIsLoggedIn(true);\n  };\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user_id');\n    localStorage.removeItem('user_email');\n    localStorage.removeItem('user_name'); // Remove userName\n\n    setAuthToken(null);\n    setUserId(null);\n    setUserEmail(null);\n    setUserName(null);\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authToken,\n      userId,\n      userEmail,\n      userName,\n      isLoggedIn,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"zkv+O4wtRvwu/dB2p0twn0Mc7eM=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","authToken","setAuthToken","userId","setUserId","userEmail","setUserEmail","userName","setUserName","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","id","email","name","login","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/varsa/Quiz-Website-Project/frontend_react/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [authToken, setAuthToken] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [userEmail, setUserEmail] = useState(null);\r\n  const [userName, setUserName] = useState(null);  // Added userName state\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Keep keys consistent with api.js and LoginForm.jsx\r\n    const token = localStorage.getItem('access_token');\r\n    const id = localStorage.getItem('user_id');\r\n    const email = localStorage.getItem('user_email');\r\n    const name = localStorage.getItem('user_name'); // Added retrieval\r\n\r\n    if (token && id && email) {\r\n      setAuthToken(token);\r\n      setUserId(id);\r\n      setUserEmail(email);\r\n      setUserName(name || null);  // Set userName if exists\r\n      setIsLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  const login = (token, id, email, name) => {\r\n    localStorage.setItem('access_token', token);\r\n    localStorage.setItem('user_id', id);\r\n    localStorage.setItem('user_email', email);\r\n    localStorage.setItem('user_name', name);  // Save userName\r\n\r\n    setAuthToken(token);\r\n    setUserId(id);\r\n    setUserEmail(email);\r\n    setUserName(name);\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('access_token');\r\n    localStorage.removeItem('user_id');\r\n    localStorage.removeItem('user_email');\r\n    localStorage.removeItem('user_name'); // Remove userName\r\n\r\n    setAuthToken(null);\r\n    setUserId(null);\r\n    setUserEmail(null);\r\n    setUserName(null);\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ authToken, userId, userEmail, userName, isLoggedIn, login, logout }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}