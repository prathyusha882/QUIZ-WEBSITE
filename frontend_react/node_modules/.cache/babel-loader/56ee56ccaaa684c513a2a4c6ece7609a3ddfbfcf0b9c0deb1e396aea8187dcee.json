{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varsa\\\\Quiz-Website-Project\\\\frontend_react\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\nimport Question from '../components/quiz/Question';\nimport Timer from '../components/quiz/Timer';\nimport Loader from '../components/common/Loader';\nimport ErrorMessage from '../components/common/ErrorMessage';\nimport { toast } from 'react-toastify';\nimport api from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_KEY = 'quiz_answers_draft';\nconst QuizPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [searchParams] = useSearchParams();\n  const attemptId = searchParams.get('attempt');\n  const navigate = useNavigate();\n  const {\n    accessToken\n  } = useAuth();\n  const [answers, setAnswers] = useState({});\n  const [quizDetails, setQuizDetails] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [submitError, setSubmitError] = useState(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [alreadySubmitted, setAlreadySubmitted] = useState(false);\n\n  // Load draft answers from localStorage on mount\n  useEffect(() => {\n    if (attemptId) {\n      const saved = localStorage.getItem(`${LOCAL_STORAGE_KEY}_${attemptId}`);\n      if (saved) {\n        try {\n          setAnswers(JSON.parse(saved));\n        } catch {}\n      }\n    }\n  }, [attemptId]);\n\n  // Save answers draft to localStorage on answers change\n  useEffect(() => {\n    if (attemptId) {\n      localStorage.setItem(`${LOCAL_STORAGE_KEY}_${attemptId}`, JSON.stringify(answers));\n    }\n  }, [answers, attemptId]);\n  useEffect(() => {\n    if (!id || !attemptId) {\n      setError('Quiz ID or Attempt ID missing from URL.');\n      setLoading(false);\n      return;\n    }\n    if (!accessToken) {\n      setError('Not authenticated. Please log in.');\n      setLoading(false);\n      return;\n    }\n    const fetchAttemptData = async () => {\n      try {\n        var _data$quiz, _data$quiz2, _ref, _data$duration_minute, _data$quiz3;\n        const attemptRes = await api.get(`/student-quizzes/${attemptId}/`);\n        const data = attemptRes.data;\n        if (data.submitted) setAlreadySubmitted(true);\n        setQuizDetails({\n          title: data.quiz_title || ((_data$quiz = data.quiz) === null || _data$quiz === void 0 ? void 0 : _data$quiz.title) || 'Quiz',\n          description: data.quiz_description || ((_data$quiz2 = data.quiz) === null || _data$quiz2 === void 0 ? void 0 : _data$quiz2.description) || '',\n          duration_minutes: (_ref = (_data$duration_minute = data.duration_minutes) !== null && _data$duration_minute !== void 0 ? _data$duration_minute : (_data$quiz3 = data.quiz) === null || _data$quiz3 === void 0 ? void 0 : _data$quiz3.duration_minutes) !== null && _ref !== void 0 ? _ref : 60\n        });\n        setQuestions(Array.isArray(data.questions) ? data.questions : []);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        const message = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || err.message || 'Failed to load quiz.';\n        setError(message);\n        toast.error(message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAttemptData();\n  }, [id, attemptId, accessToken]);\n  const handleAnswerChange = (questionId, answer) => {\n    setAnswers(prev => ({\n      ...prev,\n      [String(questionId)]: answer\n    }));\n  };\n  const handleSubmit = useCallback(() => {\n    if (alreadySubmitted) {\n      toast.info('You have already submitted this quiz.');\n      return;\n    }\n    if (questions.length === 0) {\n      setSubmitError('No questions to submit.');\n      return;\n    }\n    const answersPayload = questions.map(q => {\n      var _answers$qid;\n      const qid = String(q.id);\n      const ans = (_answers$qid = answers[qid]) !== null && _answers$qid !== void 0 ? _answers$qid : '';\n      return {\n        question: Number(qid),\n        selected_option: typeof ans === 'number' ? ans : Number(ans) || null\n      };\n    }).filter(a => a.selected_option !== null && a.selected_option !== '');\n    if (answersPayload.length === 0) {\n      setSubmitError('Please answer at least one question.');\n      return;\n    }\n    if (!window.confirm('Are you sure you want to submit the quiz?')) {\n      return;\n    }\n    setSubmitError(null);\n    setIsSubmitting(true);\n    api.post(`/student-quizzes/${attemptId}/submit/`, {\n      answers: answersPayload\n    }).then(res => {\n      toast.success('Quiz submitted successfully!');\n      setAlreadySubmitted(true);\n      localStorage.removeItem(`${LOCAL_STORAGE_KEY}_${attemptId}`);\n      navigate(`/results/${attemptId}`, {\n        state: {\n          result: res.data\n        }\n      });\n    }).catch(err => {\n      var _err$response2, _err$response2$data, _err$response3, _err$response3$data;\n      const message = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.detail) || err.message || 'Submission failed. Please try again.';\n      setSubmitError(message);\n      toast.error(message);\n      if (message.includes('already been submitted')) {\n        setAlreadySubmitted(true);\n      }\n    }).finally(() => setIsSubmitting(false));\n  }, [answers, attemptId, alreadySubmitted, navigate, questions]);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    message: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold text-gray-800\",\n        children: quizDetails === null || quizDetails === void 0 ? void 0 : quizDetails.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        durationMinutes: quizDetails === null || quizDetails === void 0 ? void 0 : quizDetails.duration_minutes,\n        onTimeUp: () => {\n          if (!alreadySubmitted) {\n            handleSubmit();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), submitError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-3 rounded border border-red-600 text-red-700 bg-red-100\",\n      children: submitError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: questions.length > 0 ? questions.map(question => /*#__PURE__*/_jsxDEV(Question, {\n        question: question,\n        onAnswerChange: handleAnswerChange,\n        currentAnswer: answers[String(question.id)],\n        disabled: alreadySubmitted\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No questions available for this quiz.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: isSubmitting || alreadySubmitted,\n      className: `btn w-full mt-8 py-3 rounded-lg transition-colors ${alreadySubmitted ? 'bg-gray-400 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700 text-white'}`,\n      \"aria-label\": \"Submit Quiz\",\n      children: alreadySubmitted ? 'Quiz Already Submitted' : isSubmitting ? 'Submitting...' : 'Submit Quiz'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"9skIWTyEv7xdg+KhUWKEBz1UTfw=\", false, function () {\n  return [useParams, useSearchParams, useNavigate, useAuth];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useParams","useNavigate","useSearchParams","Question","Timer","Loader","ErrorMessage","toast","api","useAuth","jsxDEV","_jsxDEV","LOCAL_STORAGE_KEY","QuizPage","_s","id","searchParams","attemptId","get","navigate","accessToken","answers","setAnswers","quizDetails","setQuizDetails","questions","setQuestions","loading","setLoading","error","setError","submitError","setSubmitError","isSubmitting","setIsSubmitting","alreadySubmitted","setAlreadySubmitted","saved","localStorage","getItem","JSON","parse","setItem","stringify","fetchAttemptData","_data$quiz","_data$quiz2","_ref","_data$duration_minute","_data$quiz3","attemptRes","data","submitted","title","quiz_title","quiz","description","quiz_description","duration_minutes","Array","isArray","err","_err$response","_err$response$data","message","response","detail","handleAnswerChange","questionId","answer","prev","String","handleSubmit","info","length","answersPayload","map","q","_answers$qid","qid","ans","question","Number","selected_option","filter","a","window","confirm","post","then","res","success","removeItem","state","result","catch","_err$response2","_err$response2$data","_err$response3","_err$response3$data","includes","finally","fileName","_jsxFileName","lineNumber","columnNumber","className","children","durationMinutes","onTimeUp","onAnswerChange","currentAnswer","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/varsa/Quiz-Website-Project/frontend_react/src/pages/QuizPage.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport Question from '../components/quiz/Question';\r\nimport Timer from '../components/quiz/Timer';\r\nimport Loader from '../components/common/Loader';\r\nimport ErrorMessage from '../components/common/ErrorMessage';\r\nimport { toast } from 'react-toastify';\r\nimport api from '../services/api';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst LOCAL_STORAGE_KEY = 'quiz_answers_draft';\r\n\r\nconst QuizPage = () => {\r\n  const { id } = useParams();\r\n  const [searchParams] = useSearchParams();\r\n  const attemptId = searchParams.get('attempt');\r\n  const navigate = useNavigate();\r\n  const { accessToken } = useAuth();\r\n\r\n  const [answers, setAnswers] = useState({});\r\n  const [quizDetails, setQuizDetails] = useState(null);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [submitError, setSubmitError] = useState(null);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [alreadySubmitted, setAlreadySubmitted] = useState(false);\r\n\r\n  // Load draft answers from localStorage on mount\r\n  useEffect(() => {\r\n    if (attemptId) {\r\n      const saved = localStorage.getItem(`${LOCAL_STORAGE_KEY}_${attemptId}`);\r\n      if (saved) {\r\n        try {\r\n          setAnswers(JSON.parse(saved));\r\n        } catch {}\r\n      }\r\n    }\r\n  }, [attemptId]);\r\n\r\n  // Save answers draft to localStorage on answers change\r\n  useEffect(() => {\r\n    if (attemptId) {\r\n      localStorage.setItem(`${LOCAL_STORAGE_KEY}_${attemptId}`, JSON.stringify(answers));\r\n    }\r\n  }, [answers, attemptId]);\r\n\r\n  useEffect(() => {\r\n    if (!id || !attemptId) {\r\n      setError('Quiz ID or Attempt ID missing from URL.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    if (!accessToken) {\r\n      setError('Not authenticated. Please log in.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchAttemptData = async () => {\r\n      try {\r\n        const attemptRes = await api.get(`/student-quizzes/${attemptId}/`);\r\n        const data = attemptRes.data;\r\n\r\n        if (data.submitted) setAlreadySubmitted(true);\r\n\r\n        setQuizDetails({\r\n          title: data.quiz_title || data.quiz?.title || 'Quiz',\r\n          description: data.quiz_description || data.quiz?.description || '',\r\n          duration_minutes: data.duration_minutes ?? data.quiz?.duration_minutes ?? 60,\r\n        });\r\n\r\n        setQuestions(Array.isArray(data.questions) ? data.questions : []);\r\n      } catch (err) {\r\n        const message = err.response?.data?.detail || err.message || 'Failed to load quiz.';\r\n        setError(message);\r\n        toast.error(message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAttemptData();\r\n  }, [id, attemptId, accessToken]);\r\n\r\n  const handleAnswerChange = (questionId, answer) => {\r\n    setAnswers((prev) => ({ ...prev, [String(questionId)]: answer }));\r\n  };\r\n\r\n  const handleSubmit = useCallback(() => {\r\n    if (alreadySubmitted) {\r\n      toast.info('You have already submitted this quiz.');\r\n      return;\r\n    }\r\n\r\n    if (questions.length === 0) {\r\n      setSubmitError('No questions to submit.');\r\n      return;\r\n    }\r\n\r\n    const answersPayload = questions\r\n      .map((q) => {\r\n        const qid = String(q.id);\r\n        const ans = answers[qid] ?? '';\r\n        return {\r\n          question: Number(qid),\r\n          selected_option: typeof ans === 'number' ? ans : Number(ans) || null,\r\n        };\r\n      })\r\n      .filter((a) => a.selected_option !== null && a.selected_option !== '');\r\n\r\n    if (answersPayload.length === 0) {\r\n      setSubmitError('Please answer at least one question.');\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm('Are you sure you want to submit the quiz?')) {\r\n      return;\r\n    }\r\n\r\n    setSubmitError(null);\r\n    setIsSubmitting(true);\r\n\r\n    api.post(`/student-quizzes/${attemptId}/submit/`, {\r\n      answers: answersPayload,\r\n    })\r\n      .then((res) => {\r\n        toast.success('Quiz submitted successfully!');\r\n        setAlreadySubmitted(true);\r\n        localStorage.removeItem(`${LOCAL_STORAGE_KEY}_${attemptId}`);\r\n        navigate(`/results/${attemptId}`, { state: { result: res.data } });\r\n      })\r\n      .catch((err) => {\r\n        const message =\r\n          err.response?.data?.error ||\r\n          err.response?.data?.detail ||\r\n          err.message ||\r\n          'Submission failed. Please try again.';\r\n        setSubmitError(message);\r\n        toast.error(message);\r\n        if (message.includes('already been submitted')) {\r\n          setAlreadySubmitted(true);\r\n        }\r\n      })\r\n      .finally(() => setIsSubmitting(false));\r\n  }, [answers, attemptId, alreadySubmitted, navigate, questions]);\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <ErrorMessage message={error} />;\r\n\r\n  return (\r\n    <div className=\"container mx-auto mt-8\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h2 className=\"text-3xl font-bold text-gray-800\">{quizDetails?.title}</h2>\r\n        <Timer\r\n          durationMinutes={quizDetails?.duration_minutes}\r\n          onTimeUp={() => {\r\n            if (!alreadySubmitted) {\r\n              handleSubmit();\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {submitError && (\r\n        <div className=\"mb-4 p-3 rounded border border-red-600 text-red-700 bg-red-100\">\r\n          {submitError}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"space-y-6\">\r\n        {questions.length > 0 ? (\r\n          questions.map((question) => (\r\n            <Question\r\n              key={question.id}\r\n              question={question}\r\n              onAnswerChange={handleAnswerChange}\r\n              currentAnswer={answers[String(question.id)]}\r\n              disabled={alreadySubmitted}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p className=\"text-gray-500\">No questions available for this quiz.</p>\r\n        )}\r\n      </div>\r\n\r\n      <button\r\n        onClick={handleSubmit}\r\n        disabled={isSubmitting || alreadySubmitted}\r\n        className={`btn w-full mt-8 py-3 rounded-lg transition-colors ${\r\n          alreadySubmitted\r\n            ? 'bg-gray-400 cursor-not-allowed'\r\n            : 'bg-blue-600 hover:bg-blue-700 text-white'\r\n        }`}\r\n        aria-label=\"Submit Quiz\"\r\n      >\r\n        {alreadySubmitted ? 'Quiz Already Submitted' : isSubmitting ? 'Submitting...' : 'Submit Quiz'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}