{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varsa\\\\Quiz-Website-Project\\\\frontend_react\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { refreshToken as apiRefreshToken, logoutUser } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [accessToken, setAccessToken] = useState(() => localStorage.getItem('access_token') || null);\n  const [refreshToken, setRefreshToken] = useState(() => localStorage.getItem('refresh_token') || null);\n  const [userId, setUserId] = useState(() => localStorage.getItem('userId') || null);\n  const [userEmail, setUserEmail] = useState(() => localStorage.getItem('userEmail') || null);\n  const [userName, setUserName] = useState(() => localStorage.getItem('userName') || null);\n  const [isLoggedIn, setIsLoggedIn] = useState(() => !!localStorage.getItem('access_token'));\n  useEffect(() => {\n    const handleStorageChange = () => {\n      setAccessToken(localStorage.getItem('access_token'));\n      setRefreshToken(localStorage.getItem('refresh_token'));\n      setUserId(localStorage.getItem('userId'));\n      setUserEmail(localStorage.getItem('userEmail'));\n      setUserName(localStorage.getItem('userName'));\n      setIsLoggedIn(!!localStorage.getItem('access_token'));\n    };\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []);\n\n  // login function\n  const login = (access, id, email, name = null, refresh = null) => {\n    localStorage.setItem('access_token', access);\n    if (refresh) localStorage.setItem('refresh_token', refresh);\n    localStorage.setItem('userId', id);\n    localStorage.setItem('userEmail', email);\n    if (name) localStorage.setItem('userName', name);\n    setAccessToken(access);\n    setRefreshToken(refresh);\n    setUserId(id);\n    setUserEmail(email);\n    setUserName(name);\n    setIsLoggedIn(true);\n  };\n\n  // logout function\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('userEmail');\n    localStorage.removeItem('userName');\n    setAccessToken(null);\n    setRefreshToken(null);\n    setUserId(null);\n    setUserEmail(null);\n    setUserName(null);\n    setIsLoggedIn(false);\n    logoutUser();\n  };\n\n  // refresh access token\n  const refreshAccessToken = async () => {\n    if (refreshToken) {\n      try {\n        const res = await apiRefreshToken(refreshToken);\n        const {\n          access\n        } = res.data;\n        setAccessToken(access);\n        localStorage.setItem('access_token', access);\n        return access;\n      } catch (err) {\n        console.error('Token refresh failed', err);\n        logout();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      accessToken,\n      refreshToken,\n      userId,\n      userEmail,\n      userName,\n      isLoggedIn,\n      login,\n      logout,\n      refreshAccessToken,\n      setAccessToken,\n      setRefreshToken,\n      setUserId,\n      setUserEmail,\n      setUserName\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"iLwYvJRVqyyXLy2l8QIrV03j9EE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","refreshToken","apiRefreshToken","logoutUser","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","accessToken","setAccessToken","localStorage","getItem","setRefreshToken","userId","setUserId","userEmail","setUserEmail","userName","setUserName","isLoggedIn","setIsLoggedIn","handleStorageChange","window","addEventListener","removeEventListener","login","access","id","email","name","refresh","setItem","logout","removeItem","refreshAccessToken","res","data","err","console","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/varsa/Quiz-Website-Project/frontend_react/src/contexts/AuthContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { refreshToken as apiRefreshToken, logoutUser } from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [accessToken, setAccessToken] = useState(() => localStorage.getItem('access_token') || null);\r\n  const [refreshToken, setRefreshToken] = useState(() => localStorage.getItem('refresh_token') || null);\r\n  const [userId, setUserId] = useState(() => localStorage.getItem('userId') || null);\r\n  const [userEmail, setUserEmail] = useState(() => localStorage.getItem('userEmail') || null);\r\n  const [userName, setUserName] = useState(() => localStorage.getItem('userName') || null);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(() => !!localStorage.getItem('access_token'));\r\n\r\n  useEffect(() => {\r\n    const handleStorageChange = () => {\r\n      setAccessToken(localStorage.getItem('access_token'));\r\n      setRefreshToken(localStorage.getItem('refresh_token'));\r\n      setUserId(localStorage.getItem('userId'));\r\n      setUserEmail(localStorage.getItem('userEmail'));\r\n      setUserName(localStorage.getItem('userName'));\r\n      setIsLoggedIn(!!localStorage.getItem('access_token'));\r\n    };\r\n\r\n    window.addEventListener('storage', handleStorageChange);\r\n    return () => window.removeEventListener('storage', handleStorageChange);\r\n  }, []);\r\n\r\n  // login function\r\n  const login = (access, id, email, name = null, refresh = null) => {\r\n    localStorage.setItem('access_token', access);\r\n    if (refresh) localStorage.setItem('refresh_token', refresh);\r\n    localStorage.setItem('userId', id);\r\n    localStorage.setItem('userEmail', email);\r\n    if (name) localStorage.setItem('userName', name);\r\n\r\n    setAccessToken(access);\r\n    setRefreshToken(refresh);\r\n    setUserId(id);\r\n    setUserEmail(email);\r\n    setUserName(name);\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  // logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('access_token');\r\n    localStorage.removeItem('refresh_token');\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('userEmail');\r\n    localStorage.removeItem('userName');\r\n\r\n    setAccessToken(null);\r\n    setRefreshToken(null);\r\n    setUserId(null);\r\n    setUserEmail(null);\r\n    setUserName(null);\r\n    setIsLoggedIn(false);\r\n    logoutUser();\r\n  };\r\n\r\n  // refresh access token\r\n  const refreshAccessToken = async () => {\r\n    if (refreshToken) {\r\n      try {\r\n        const res = await apiRefreshToken(refreshToken);\r\n        const { access } = res.data;\r\n        setAccessToken(access);\r\n        localStorage.setItem('access_token', access);\r\n        return access;\r\n      } catch (err) {\r\n        console.error('Token refresh failed', err);\r\n        logout();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        accessToken,\r\n        refreshToken,\r\n        userId,\r\n        userEmail,\r\n        userName,\r\n        isLoggedIn,\r\n        login,\r\n        logout,\r\n        refreshAccessToken,\r\n        setAccessToken,\r\n        setRefreshToken,\r\n        setUserId,\r\n        setUserEmail,\r\n        setUserName,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}