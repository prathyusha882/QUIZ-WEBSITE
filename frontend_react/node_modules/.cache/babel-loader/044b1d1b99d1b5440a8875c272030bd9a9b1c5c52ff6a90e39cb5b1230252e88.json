{"ast":null,"code":"var _jsxFileName = \"/frontend_react/src/pages/QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\nimport Question from '../components/quiz/Question';\nimport Timer from '../components/quiz/Timer';\nimport Loader from '../components/common/Loader';\nimport ErrorMessage from '../components/common/ErrorMessage';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [searchParams] = useSearchParams();\n  const attemptId = searchParams.get('attempt');\n  const navigate = useNavigate();\n  const {\n    authToken\n  } = useAuth();\n  const [answers, setAnswers] = useState({});\n  const [quizDetails, setQuizDetails] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!id || !attemptId) {\n      setError('Quiz ID or Attempt ID missing from URL.');\n      setLoading(false);\n      return;\n    }\n    if (!authToken) {\n      setError('No access token found.');\n      toast.error('Please log in first.');\n      setLoading(false);\n      return;\n    }\n    const fetchAttemptData = async () => {\n      try {\n        const headers = {\n          Authorization: `Token ${authToken}`\n        };\n        const attemptRes = await axios.get(`http://localhost:8000/api/attempts/${attemptId}/`, {\n          headers\n        });\n        setQuizDetails(attemptRes.data.quiz);\n        setQuestions(attemptRes.data.questions);\n      } catch (err) {\n        setError('Failed to load quiz.');\n        toast.error('Failed to load quiz.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAttemptData();\n  }, [id, attemptId, authToken]);\n  const handleAnswerChange = (questionId, answer) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: answer\n    }));\n  };\n  const handleSubmit = async () => {\n    if (!authToken) {\n      toast.error('No access token found. Please login again.');\n      return;\n    }\n    try {\n      const headers = {\n        Authorization: `Token ${authToken}`\n      };\n      const submissions = Object.entries(answers).map(([questionId, answer]) => ({\n        question_id: questionId,\n        answer\n      }));\n      await axios.post(`http://localhost:8000/api/attempts/${attemptId}/submit/`, {\n        submissions\n      }, {\n        headers\n      });\n      toast.success('Quiz submitted successfully!');\n      navigate(`/results/${attemptId}`);\n    } catch (err) {\n      toast.error('Submission failed. Please try again.');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    message: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold text-gray-800\",\n        children: (quizDetails === null || quizDetails === void 0 ? void 0 : quizDetails.title) || 'Quiz'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        durationMinutes: (quizDetails === null || quizDetails === void 0 ? void 0 : quizDetails.duration_minutes) || 60,\n        onTimeUp: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: questions.map(question => /*#__PURE__*/_jsxDEV(Question, {\n        question: question,\n        onAnswerChange: handleAnswerChange,\n        currentAnswer: answers[question.id]\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"btn btn-primary w-full mt-8\",\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"saw9RcJDKR39METyxTwm60ef5eo=\", false, function () {\n  return [useParams, useSearchParams, useNavigate, useAuth];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","useSearchParams","Question","Timer","Loader","ErrorMessage","toast","axios","useAuth","jsxDEV","_jsxDEV","QuizPage","_s","id","searchParams","attemptId","get","navigate","authToken","answers","setAnswers","quizDetails","setQuizDetails","questions","setQuestions","loading","setLoading","error","setError","fetchAttemptData","headers","Authorization","attemptRes","data","quiz","err","handleAnswerChange","questionId","answer","prev","handleSubmit","submissions","Object","entries","map","question_id","post","success","fileName","_jsxFileName","lineNumber","columnNumber","message","className","children","title","durationMinutes","duration_minutes","onTimeUp","question","onAnswerChange","currentAnswer","onClick","_c","$RefreshReg$"],"sources":["/frontend_react/src/pages/QuizPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport Question from '../components/quiz/Question';\r\nimport Timer from '../components/quiz/Timer';\r\nimport Loader from '../components/common/Loader';\r\nimport ErrorMessage from '../components/common/ErrorMessage';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst QuizPage = () => {\r\n  const { id } = useParams();\r\n  const [searchParams] = useSearchParams();\r\n  const attemptId = searchParams.get('attempt');\r\n  const navigate = useNavigate();\r\n  const { authToken } = useAuth();\r\n\r\n  const [answers, setAnswers] = useState({});\r\n  const [quizDetails, setQuizDetails] = useState(null);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!id || !attemptId) {\r\n      setError('Quiz ID or Attempt ID missing from URL.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (!authToken) {\r\n      setError('No access token found.');\r\n      toast.error('Please log in first.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchAttemptData = async () => {\r\n      try {\r\n        const headers = { Authorization: `Token ${authToken}` };\r\n\r\n        const attemptRes = await axios.get(\r\n          `http://localhost:8000/api/attempts/${attemptId}/`,\r\n          { headers }\r\n        );\r\n\r\n        setQuizDetails(attemptRes.data.quiz);\r\n        setQuestions(attemptRes.data.questions);\r\n      } catch (err) {\r\n        setError('Failed to load quiz.');\r\n        toast.error('Failed to load quiz.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAttemptData();\r\n  }, [id, attemptId, authToken]);\r\n\r\n  const handleAnswerChange = (questionId, answer) => {\r\n    setAnswers((prev) => ({ ...prev, [questionId]: answer }));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!authToken) {\r\n      toast.error('No access token found. Please login again.');\r\n      return;\r\n    }\r\n    try {\r\n      const headers = { Authorization: `Token ${authToken}` };\r\n      const submissions = Object.entries(answers).map(([questionId, answer]) => ({\r\n        question_id: questionId,\r\n        answer,\r\n      }));\r\n\r\n      await axios.post(\r\n        `http://localhost:8000/api/attempts/${attemptId}/submit/`,\r\n        { submissions },\r\n        { headers }\r\n      );\r\n\r\n      toast.success('Quiz submitted successfully!');\r\n      navigate(`/results/${attemptId}`);\r\n    } catch (err) {\r\n      toast.error('Submission failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <ErrorMessage message={error} />;\r\n\r\n  return (\r\n    <div className=\"container mx-auto mt-8\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h2 className=\"text-3xl font-bold text-gray-800\">\r\n          {quizDetails?.title || 'Quiz'}\r\n        </h2>\r\n        <Timer\r\n          durationMinutes={quizDetails?.duration_minutes || 60}\r\n          onTimeUp={handleSubmit}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"space-y-6\">\r\n        {questions.map((question) => (\r\n          <Question\r\n            key={question.id}\r\n            question={question}\r\n            onAnswerChange={handleAnswerChange}\r\n            currentAnswer={answers[question.id]}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <button onClick={handleSubmit} className=\"btn btn-primary w-full mt-8\">\r\n        Submit Quiz\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}