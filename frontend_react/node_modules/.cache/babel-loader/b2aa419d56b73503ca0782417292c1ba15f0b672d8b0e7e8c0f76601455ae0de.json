{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varsa\\\\Quiz-Website-Project\\\\frontend_react\\\\src\\\\components\\\\quiz\\\\CodeEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CodeEditor from './CodeEditor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = ({\n  question,\n  onAnswerChange,\n  currentAnswer\n}) => {\n  _s();\n  const [runOutput, setRunOutput] = useState('');\n  const handleRun = () => {\n    try {\n      // Simple JS simulation (for Python, call backend API)\n      const userCode = currentAnswer || '';\n      // You can send this to backend for execution\n      setRunOutput('Code sent for execution...');\n    } catch (err) {\n      setRunOutput(`Error: ${err.message}`);\n    }\n  };\n  const handleTest = () => {\n    // Call backend to test against predefined cases\n    setRunOutput('Testing code against sample cases...');\n  };\n  const renderQuestionInput = () => {\n    var _question$choices;\n    switch (question.question_type) {\n      case 'mcq':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: (_question$choices = question.choices) === null || _question$choices === void 0 ? void 0 : _question$choices.map(choice => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block cursor-pointer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${question.id}`,\n              value: choice.choice_text,\n              checked: currentAnswer === choice.choice_text,\n              onChange: e => onAnswerChange(question.id, e.target.value),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this), choice.choice_text]\n          }, choice.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this);\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-input w-full\",\n          value: currentAnswer || '',\n          onChange: e => onAnswerChange(question.id, e.target.value),\n          placeholder: \"Type your answer here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this);\n      case 'tf':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: ['True', 'False'].map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block cursor-pointer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${question.id}`,\n              value: option,\n              checked: currentAnswer === option,\n              onChange: e => onAnswerChange(question.id, e.target.value),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), option]\n          }, option, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this);\n      case 'code':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [question.expected_input && question.expected_output && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 p-3 bg-gray-100 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-semibold\",\n              children: \"Expected Input:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"bg-white p-2 rounded border\",\n              children: question.expected_input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-semibold mt-2\",\n              children: \"Expected Output:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"bg-white p-2 rounded border\",\n              children: question.expected_output\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CodeEditor, {\n            code: currentAnswer || '',\n            onCodeChange: code => onAnswerChange(question.id, code)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 flex gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleRun,\n              className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n              children: \"Run\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleTest,\n              className: \"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\",\n              children: \"Test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), runOutput && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 p-3 bg-black text-white rounded\",\n            children: /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: runOutput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Unsupported question type: \", question.question_type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mb-6 p-4 border rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: question.question_text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), renderQuestionInput()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(Question, \"vHF7jJ+AkbWL2KUINzttAw5jFUo=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","CodeEditor","jsxDEV","_jsxDEV","Question","question","onAnswerChange","currentAnswer","_s","runOutput","setRunOutput","handleRun","userCode","err","message","handleTest","renderQuestionInput","_question$choices","question_type","className","children","choices","map","choice","type","name","id","value","choice_text","checked","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","option","expected_input","expected_output","code","onCodeChange","onClick","question_text","_c","$RefreshReg$"],"sources":["C:/Users/varsa/Quiz-Website-Project/frontend_react/src/components/quiz/CodeEditor.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport CodeEditor from './CodeEditor';\r\n\r\nconst Question = ({ question, onAnswerChange, currentAnswer }) => {\r\n  const [runOutput, setRunOutput] = useState('');\r\n\r\n  const handleRun = () => {\r\n    try {\r\n      // Simple JS simulation (for Python, call backend API)\r\n      const userCode = currentAnswer || '';\r\n      // You can send this to backend for execution\r\n      setRunOutput('Code sent for execution...');\r\n    } catch (err) {\r\n      setRunOutput(`Error: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleTest = () => {\r\n    // Call backend to test against predefined cases\r\n    setRunOutput('Testing code against sample cases...');\r\n  };\r\n\r\n  const renderQuestionInput = () => {\r\n    switch (question.question_type) {\r\n      case 'mcq':\r\n        return (\r\n          <div className=\"space-y-4\">\r\n            {question.choices?.map((choice) => (\r\n              <label key={choice.id} className=\"block cursor-pointer\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name={`question-${question.id}`}\r\n                  value={choice.choice_text}\r\n                  checked={currentAnswer === choice.choice_text}\r\n                  onChange={(e) => onAnswerChange(question.id, e.target.value)}\r\n                  className=\"mr-2\"\r\n                />\r\n                {choice.choice_text}\r\n              </label>\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      case 'text':\r\n        return (\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-input w-full\"\r\n            value={currentAnswer || ''}\r\n            onChange={(e) => onAnswerChange(question.id, e.target.value)}\r\n            placeholder=\"Type your answer here...\"\r\n          />\r\n        );\r\n\r\n      case 'tf':\r\n        return (\r\n          <div className=\"space-y-2\">\r\n            {['True', 'False'].map((option) => (\r\n              <label key={option} className=\"block cursor-pointer\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name={`question-${question.id}`}\r\n                  value={option}\r\n                  checked={currentAnswer === option}\r\n                  onChange={(e) => onAnswerChange(question.id, e.target.value)}\r\n                  className=\"mr-2\"\r\n                />\r\n                {option}\r\n              </label>\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      case 'code':\r\n        return (\r\n          <div>\r\n            {/* Expected Input/Output */}\r\n            {question.expected_input && question.expected_output && (\r\n              <div className=\"mb-4 p-3 bg-gray-100 rounded\">\r\n                <p className=\"font-semibold\">Expected Input:</p>\r\n                <pre className=\"bg-white p-2 rounded border\">{question.expected_input}</pre>\r\n                <p className=\"font-semibold mt-2\">Expected Output:</p>\r\n                <pre className=\"bg-white p-2 rounded border\">{question.expected_output}</pre>\r\n              </div>\r\n            )}\r\n\r\n            {/* Code Editor */}\r\n            <CodeEditor\r\n              code={currentAnswer || ''}\r\n              onCodeChange={(code) => onAnswerChange(question.id, code)}\r\n            />\r\n\r\n            {/* Run / Test Buttons */}\r\n            <div className=\"mt-3 flex gap-3\">\r\n              <button\r\n                onClick={handleRun}\r\n                className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n              >\r\n                Run\r\n              </button>\r\n              <button\r\n                onClick={handleTest}\r\n                className=\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\"\r\n              >\r\n                Test\r\n              </button>\r\n            </div>\r\n\r\n            {/* Output */}\r\n            {runOutput && (\r\n              <div className=\"mt-3 p-3 bg-black text-white rounded\">\r\n                <pre>{runOutput}</pre>\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return <p>Unsupported question type: {question.question_type}</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card mb-6 p-4 border rounded shadow\">\r\n      <h3 className=\"text-xl font-semibold mb-4\">{question.question_text}</h3>\r\n      {renderQuestionInput()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}