{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varsa\\\\Quiz-Website-Project\\\\frontend_react\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\nimport Question from '../components/quiz/Question';\nimport Timer from '../components/quiz/Timer';\nimport Loader from '../components/common/Loader';\nimport ErrorMessage from '../components/common/ErrorMessage';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [searchParams] = useSearchParams();\n  const attemptId = searchParams.get('attempt');\n  const navigate = useNavigate();\n  const {\n    authToken\n  } = useAuth();\n  const [answers, setAnswers] = useState({});\n  const [quizDetails, setQuizDetails] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!id || !attemptId) {\n      setError('Quiz ID or Attempt ID missing from URL.');\n      setLoading(false);\n      return;\n    }\n    if (!authToken) {\n      setError('No access token found.');\n      toast.error('Please log in first.');\n      setLoading(false);\n      return;\n    }\n    const fetchAttemptData = async () => {\n      try {\n        const headers = {\n          Authorization: `Token ${authToken}`\n        };\n        const attemptRes = await axios.get(`http://localhost:8000/api/student-quizzes/${attemptId}/`, {\n          headers\n        });\n\n        // Backend now sends quiz_* fields directly\n        setQuizDetails({\n          title: attemptRes.data.quiz_title,\n          description: attemptRes.data.quiz_description,\n          duration_minutes: attemptRes.data.duration_minutes\n        });\n\n        // Always default to empty array if no questions\n        setQuestions(Array.isArray(attemptRes.data.questions) ? attemptRes.data.questions : []);\n      } catch (err) {\n        console.error(err);\n        setError('Failed to load quiz.');\n        toast.error('Failed to load quiz.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAttemptData();\n  }, [id, attemptId, authToken]);\n  const handleAnswerChange = (questionId, answer) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: answer\n    }));\n  };\n  const handleSubmit = async () => {\n    if (!authToken) {\n      toast.error('No access token found. Please login again.');\n      return;\n    }\n    try {\n      const headers = {\n        Authorization: `Token ${authToken}`\n      };\n      const submissions = Object.entries(answers).map(([questionId, answer]) => ({\n        question: questionId,\n        answer_text: answer\n      }));\n      await axios.post(`http://localhost:8000/api/student-quizzes/${attemptId}/submit/`, {\n        submissions\n      }, {\n        headers\n      });\n      toast.success('Quiz submitted successfully!');\n      navigate(`/results/${attemptId}`);\n    } catch (err) {\n      console.error(err);\n      toast.error('Submission failed. Please try again.');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    message: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold text-gray-800\",\n        children: (quizDetails === null || quizDetails === void 0 ? void 0 : quizDetails.title) || 'Quiz'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        durationMinutes: (quizDetails === null || quizDetails === void 0 ? void 0 : quizDetails.duration_minutes) || 60,\n        onTimeUp: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: questions.map(question => /*#__PURE__*/_jsxDEV(Question, {\n        question: question,\n        onAnswerChange: handleAnswerChange,\n        currentAnswer: answers[question.id]\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"btn btn-primary w-full mt-8\",\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"saw9RcJDKR39METyxTwm60ef5eo=\", false, function () {\n  return [useParams, useSearchParams, useNavigate, useAuth];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","useSearchParams","Question","Timer","Loader","ErrorMessage","toast","axios","useAuth","jsxDEV","_jsxDEV","QuizPage","_s","id","searchParams","attemptId","get","navigate","authToken","answers","setAnswers","quizDetails","setQuizDetails","questions","setQuestions","loading","setLoading","error","setError","fetchAttemptData","headers","Authorization","attemptRes","title","data","quiz_title","description","quiz_description","duration_minutes","Array","isArray","err","console","handleAnswerChange","questionId","answer","prev","handleSubmit","submissions","Object","entries","map","question","answer_text","post","success","fileName","_jsxFileName","lineNumber","columnNumber","message","className","children","durationMinutes","onTimeUp","onAnswerChange","currentAnswer","onClick","_c","$RefreshReg$"],"sources":["C:/Users/varsa/Quiz-Website-Project/frontend_react/src/pages/QuizPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport Question from '../components/quiz/Question';\r\nimport Timer from '../components/quiz/Timer';\r\nimport Loader from '../components/common/Loader';\r\nimport ErrorMessage from '../components/common/ErrorMessage';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst QuizPage = () => {\r\n  const { id } = useParams();\r\n  const [searchParams] = useSearchParams();\r\n  const attemptId = searchParams.get('attempt');\r\n  const navigate = useNavigate();\r\n  const { authToken } = useAuth();\r\n\r\n  const [answers, setAnswers] = useState({});\r\n  const [quizDetails, setQuizDetails] = useState(null);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!id || !attemptId) {\r\n      setError('Quiz ID or Attempt ID missing from URL.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (!authToken) {\r\n      setError('No access token found.');\r\n      toast.error('Please log in first.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchAttemptData = async () => {\r\n      try {\r\n        const headers = { Authorization: `Token ${authToken}` };\r\n\r\n        const attemptRes = await axios.get(\r\n          `http://localhost:8000/api/student-quizzes/${attemptId}/`,\r\n          { headers }\r\n        );\r\n\r\n        // Backend now sends quiz_* fields directly\r\n        setQuizDetails({\r\n          title: attemptRes.data.quiz_title,\r\n          description: attemptRes.data.quiz_description,\r\n          duration_minutes: attemptRes.data.duration_minutes,\r\n        });\r\n\r\n        // Always default to empty array if no questions\r\n        setQuestions(Array.isArray(attemptRes.data.questions) ? attemptRes.data.questions : []);\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError('Failed to load quiz.');\r\n        toast.error('Failed to load quiz.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAttemptData();\r\n  }, [id, attemptId, authToken]);\r\n\r\n  const handleAnswerChange = (questionId, answer) => {\r\n    setAnswers((prev) => ({ ...prev, [questionId]: answer }));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!authToken) {\r\n      toast.error('No access token found. Please login again.');\r\n      return;\r\n    }\r\n    try {\r\n      const headers = { Authorization: `Token ${authToken}` };\r\n      const submissions = Object.entries(answers).map(([questionId, answer]) => ({\r\n        question: questionId,\r\n        answer_text: answer,\r\n      }));\r\n\r\n      await axios.post(\r\n        `http://localhost:8000/api/student-quizzes/${attemptId}/submit/`,\r\n        { submissions },\r\n        { headers }\r\n      );\r\n\r\n      toast.success('Quiz submitted successfully!');\r\n      navigate(`/results/${attemptId}`);\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Submission failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <ErrorMessage message={error} />;\r\n\r\n  return (\r\n    <div className=\"container mx-auto mt-8\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h2 className=\"text-3xl font-bold text-gray-800\">\r\n          {quizDetails?.title || 'Quiz'}\r\n        </h2>\r\n        <Timer\r\n          durationMinutes={quizDetails?.duration_minutes || 60}\r\n          onTimeUp={handleSubmit}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"space-y-6\">\r\n        {questions.map((question) => (\r\n          <Question\r\n            key={question.id}\r\n            question={question}\r\n            onAnswerChange={handleAnswerChange}\r\n            currentAnswer={answers[question.id]}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <button onClick={handleSubmit} className=\"btn btn-primary w-full mt-8\">\r\n        Submit Quiz\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}